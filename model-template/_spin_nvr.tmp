never never_reaches_parket {    /* !([] (! ((((received_data[0].device==parket)) || ((received_data[1].device==parket))) || ((received_data[2].device==parket))))) */
T0_init:
	do
	:: atomic { (! ((! ((((received_data[0].device==parket)) || ((received_data[1].device==parket))) || ((received_data[2].device==parket)))))) -> assert(!(! ((! ((((received_data[0].device==parket)) || ((received_data[1].device==parket))) || ((received_data[2].device==parket))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never never_reaches_parketww {    /* !([] (! ((((received_data[0].device==parketww)) || ((received_data[1].device==parketww))) || ((received_data[2].device==parketww))))) */
T0_init:
	do
	:: atomic { (! ((! ((((received_data[0].device==parketww)) || ((received_data[1].device==parketww))) || ((received_data[2].device==parketww)))))) -> assert(!(! ((! ((((received_data[0].device==parketww)) || ((received_data[1].device==parketww))) || ((received_data[2].device==parketww))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never never_reaches_carinsure {    /* !([] (! ((((received_data[0].device==carinsure)) || ((received_data[1].device==carinsure))) || ((received_data[2].device==carinsure))))) */
T0_init:
	do
	:: atomic { (! ((! ((((received_data[0].device==carinsure)) || ((received_data[1].device==carinsure))) || ((received_data[2].device==carinsure)))))) -> assert(!(! ((! ((((received_data[0].device==carinsure)) || ((received_data[1].device==carinsure))) || ((received_data[2].device==carinsure))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never collection_parket_according_to_policy {    /* !([] ((! ((received_data[0].device==parket))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) */
T0_init:
	do
	:: atomic { (! (((! ((received_data[0].device==parket))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))))) -> assert(!(! (((! ((received_data[0].device==parket))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never collection_parketww_according_to_policy {    /* !([] ((! ((received_data[0].device==parketww))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) */
T0_init:
	do
	:: atomic { (! (((! ((received_data[0].device==parketww))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))))) -> assert(!(! (((! ((received_data[0].device==parketww))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never collection_carinsure_according_to_policy {    /* !([] ((! ((received_data[0].device==carinsure))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) */
T0_init:
	do
	:: atomic { (! (((! ((received_data[0].device==carinsure))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))))) -> assert(!(! (((! ((received_data[0].device==carinsure))) || ((received_data[0].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never transfer_to_parketww_according_to_policy {    /* !([] ((((! (((received_data[1].device==parketww)) && ((received_data[1].sender!=alice)))) || ((received_data[1].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))) && ((! (((received_data[2].device==parketww)) && ((received_data[2].sender!=alice)))) || ((received_data[2].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) && ((! (((received_data[3].device==parketww)) && ((received_data[3].sender!=alice)))) || ((received_data[3].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))))) */
T0_init:
	do
	:: atomic { (! (((((! (((received_data[1].device==parketww)) && ((received_data[1].sender!=alice)))) || ((received_data[1].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))) && ((! (((received_data[2].device==parketww)) && ((received_data[2].sender!=alice)))) || ((received_data[2].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) && ((! (((received_data[3].device==parketww)) && ((received_data[3].sender!=alice)))) || ((received_data[3].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))))) -> assert(!(! (((((! (((received_data[1].device==parketww)) && ((received_data[1].sender!=alice)))) || ((received_data[1].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))) && ((! (((received_data[2].device==parketww)) && ((received_data[2].sender!=alice)))) || ((received_data[2].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose)))) && ((! (((received_data[3].device==parketww)) && ((received_data[3].sender!=alice)))) || ((received_data[3].policy.dcr.dur.purpose==policy_base[0].policy.dcr.dur.purpose))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
never can_carinsure_use_for_profiling {    /* !([] ((((! ((received_data[1].device==carinsure))) || ((received_data[1].policy.dcr.dur.purpose!=profiling))) && ((! ((received_data[2].device==carinsure))) || ((received_data[2].policy.dcr.dur.purpose!=profiling)))) && ((! ((received_data[2].device==carinsure))) || ((received_data[3].policy.dcr.dur.purpose!=profiling))))) */
T0_init:
	do
	:: atomic { (! (((((! ((received_data[1].device==carinsure))) || ((received_data[1].policy.dcr.dur.purpose!=profiling))) && ((! ((received_data[2].device==carinsure))) || ((received_data[2].policy.dcr.dur.purpose!=profiling)))) && ((! ((received_data[2].device==carinsure))) || ((received_data[3].policy.dcr.dur.purpose!=profiling)))))) -> assert(!(! (((((! ((received_data[1].device==carinsure))) || ((received_data[1].policy.dcr.dur.purpose!=profiling))) && ((! ((received_data[2].device==carinsure))) || ((received_data[2].policy.dcr.dur.purpose!=profiling)))) && ((! ((received_data[2].device==carinsure))) || ((received_data[3].policy.dcr.dur.purpose!=profiling))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
